{
  "result": "// Part 1: Create a new request\nconst createRequest: FlydePart = {\n  metadata: {\n    id: \"createRequest\",\n    inputs: [\"url\", \"options\"],\n    outputs: [\"request\"],\n    completionType: \"implicit\",\n    reactiveInputs: [],\n  },\n  async function(inputs, outputs, context) {\n    const { url, options } = inputs;\n    const { request } = outputs;\n\n    const requestOptions = options || {};\n\n    const requestInit: RequestInit = {\n      method: \"POST\",\n      ...requestOptions,\n    };\n\n    const requestValue = new Request(url, requestInit);\n\n    request.value = requestValue;\n  },\n};\n\n// Part 2: Send the request\nconst sendRequest: FlydePart = {\n  metadata: {\n    id: \"sendRequest\",\n    inputs: [\"request\"],\n    outputs: [\"response\"],\n    completionType: \"implicit\",\n    reactiveInputs: [],\n  },\n  async function(inputs, outputs, context) {\n    const { request } = inputs;\n    const { response } = outputs;\n\n    const responseValue = await fetch(request.value);\n\n    response.value = responseValue;\n  },\n};\n\n// Part 3: Get the response body\nconst getResponseBody: FlydePart = {\n  metadata: {\n    id: \"getResponseBody\",\n    inputs: [\"response\"],\n    outputs: [\"body\"],\n    completionType: \"implicit\",\n    reactiveInputs: [],\n  },\n  async function(inputs, outputs, context) {\n    const { response } = inputs;\n    const { body } = outputs;\n\n    const bodyValue = await response.value.text();\n\n    body.value = bodyValue;\n  },\n};\n\n// Part 4: Parse the response body as JSON\nconst parseJson: FlydePart = {\n  metadata: {\n    id: \"parseJson\",\n    inputs: [\"body\"],\n    outputs: [\"json\"],\n    completionType: \"implicit\",\n    reactiveInputs: [],\n  },\n  function(inputs, outputs, context) {\n    const { body } = inputs;\n    const { json } = outputs;\n\n    const jsonValue = JSON.parse(body.value);\n\n    json.value = jsonValue;\n  },\n};\n\n// Part 5: Get the response headers\nconst getResponseHeaders: FlydePart = {\n  metadata: {\n    id: \"getResponseHeaders\",\n    inputs: [\"response\"],\n    outputs: [\"headers\"],\n    completionType: \"implicit\",\n    reactiveInputs: [],\n  },\n  function(inputs, outputs, context) {\n    const",
  "tokens": 653,
  "completionTime": 8072,
  "generatorName": "chat-completion-ft:gpt-3.5-turbo-0613:personal:flyde-23-08-27:7s9Gy7SR-very-condensed-no-examples",
  "prompt": "Send an HTTP POST request",
  "score": 1,
  "remarks": "Invalid metadata row // Part 1: Create a new request"
}
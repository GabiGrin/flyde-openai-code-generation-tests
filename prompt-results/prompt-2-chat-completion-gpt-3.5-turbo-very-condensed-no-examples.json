{
  "result": "```typescript\nimport { Flyde, FlydeNode, FlydeInputs, FlydeOutputs } from 'flyde';\n\ntype JSONToObjectInputs = {\n  jsonString: string;\n};\n\ntype JSONToObjectOutputs = {\n  jsonObject: object;\n};\n\nconst jsonToObjectNode: FlydeNode<\n  JSONToObjectInputs,\n  JSONToObjectOutputs\n> = {\n  id: 'jsonToObject',\n  inputs: ['jsonString'],\n  outputs: ['jsonObject'],\n  fn: async (inputs: FlydeInputs<JSONToObjectInputs>, outputs: FlydeOutputs<JSONToObjectOutputs>) => {\n    const { jsonString } = inputs;\n    try {\n      const jsonObject = JSON.parse(jsonString);\n      outputs.jsonObject = jsonObject;\n    } catch (error) {\n      throw new Error('Invalid JSON string');\n    }\n  },\n};\n\nconst jsonToObjectFlyde = new Flyde(jsonToObjectNode);\n\nexport default jsonToObjectFlyde;\n```\n\nUsage:\n```typescript\nimport jsonToObjectFlyde from './jsonToObjectFlyde';\n\nconst jsonString = '{\"name\": \"John\", \"age\": 30}';\njsonToObjectFlyde.run({ jsonString }).then((outputs) => {\n  console.log(outputs.jsonObject); // { name: 'John', age: 30 }\n}).catch((error) => {\n  console.error(error);\n});\n```",
  "tokens": 409,
  "completionTime": 6858,
  "generatorName": "chat-completion-gpt-3.5-turbo-very-condensed-no-examples",
  "prompt": "JSON string to object converter",
  "score": 1,
  "remarks": "Invalid metadata row ```typescript",
  "redid": false,
  "lastUpdated": "2023-08-27T15:03:04.446Z"
}
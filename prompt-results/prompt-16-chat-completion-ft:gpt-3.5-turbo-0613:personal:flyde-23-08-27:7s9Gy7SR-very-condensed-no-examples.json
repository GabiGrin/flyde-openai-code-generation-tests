{
  "result": "// Part 1: Import dependencies\nimport puppeteer from 'puppeteer';\n\n// Part 2: Define the function\nasync function getH1TagFromWebsite(url: string) {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto(url);\n\n  const h1Tag = await page.evaluate(() => {\n    const h1Element = document.querySelector('h1');\n    return h1Element ? h1Element.innerText : null;\n  });\n\n  await browser.close();\n\n  return h1Tag;\n}\n\n// Part 3: Define the Flyde part\nconst getH1TagFromWebsitePart: FlydePart = {\n  id: 'getH1TagFromWebsite',\n  inputs: ['url'],\n  outputs: ['h1Tag'],\n  function: getH1TagFromWebsite,\n};\n\n// Part 4: Define the function declaration\ntype GetH1TagFromWebsite = (\n  url: string\n) => Promise<string | null>;\n\n// Part 5: Define the metadata\nconst getH1TagFromWebsiteMetadata: FlydePartMetadata = {\n  id: 'getH1TagFromWebsite',\n  inputs: ['url'],\n  outputs: ['h1Tag'],\n  completionType: 'implicit',\n  reactiveInputs: [],\n};\n\n// Part 6: Define the function declaration\nconst getH1TagFromWebsiteDeclaration: FlydePartDeclaration = {\n  metadata: getH1TagFromWebsiteMetadata,\n  function: getH1TagFromWebsitePart,\n};",
  "tokens": 476,
  "completionTime": 4576,
  "generatorName": "chat-completion-ft:gpt-3.5-turbo-0613:personal:flyde-23-08-27:7s9Gy7SR-very-condensed-no-examples",
  "prompt": "receive the url of a website and return the h1 tag of the page if it exists, using a headless browser",
  "score": 1,
  "remarks": "Invalid metadata row // Part 1: Import dependencies"
}
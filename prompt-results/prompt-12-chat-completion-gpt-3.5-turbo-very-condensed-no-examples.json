{
  "result": "```typescript\nimport { createPart, Part } from \"flyde\";\n\ntype Item = any;\n\nconst repeatItemPart = createPart<Item, Item[]>(\n  async (item, { emit }) => {\n    for (let i = 0; i < 5; i++) {\n      await new Promise((resolve) => setTimeout(resolve, 200));\n      emit(item);\n    }\n    return [];\n  }\n);\n\nconst repeatItem: Part<Item, Item[]> = {\n  id: \"repeatItem\",\n  inputs: [\"item\"],\n  outputs: [\"items\"],\n  completionType: \"explicit\",\n  reactiveInputs: [\"item\"],\n  fn: repeatItemPart,\n};\n\nexport default repeatItem;\n```\n\nUsage:\n\n```typescript\nimport repeatItem from \"./repeatItem\";\n\nconst item = \"Hello, world!\";\n\nrepeatItem.run({ item }).then((result) => {\n  console.log(result.items); // [\"Hello, world!\", \"Hello, world!\", \"Hello, world!\", \"Hello, world!\", \"Hello, world!\"]\n});\n```",
  "tokens": 367,
  "completionTime": 5932,
  "generatorName": "chat-completion-gpt-3.5-turbo-very-condensed-no-examples",
  "prompt": "receive an item and emit it 5 times, with 200ms delay between each time",
  "score": 1,
  "remarks": "Invalid metadata row ```typescript",
  "redid": false,
  "lastUpdated": "2023-08-27T15:01:27.579Z"
}
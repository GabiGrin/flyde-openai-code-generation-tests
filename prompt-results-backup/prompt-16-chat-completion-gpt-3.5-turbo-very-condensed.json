{
  "result": "Node Metadata:\n```\nID: Headless Browser\nInputs: url\nOutputs: h1\nCompletion Type: IMPLICIT\nReactive Inputs: NONE\n```\n\nFunction Declaration:\n```typescript\nimport puppeteer from 'puppeteer';\n\nasync function ({url}, {h1}, {onError}) {\n  try {\n    const browser = await puppeteer.launch();\n    const page = await browser.newPage();\n    await page.goto(url);\n    const pageTitle = await page.$eval('h1', el => el.textContent);\n    if (pageTitle) {\n      h1.next(pageTitle);\n    } else {\n      onError(new Error('h1 tag not found'));\n    }\n    await browser.close();\n  } catch (error) {\n    onError(error);\n  }\n}\n```",
  "tokens": 725,
  "completionTime": 12999,
  "generatorName": "chat-completion-gpt-3.5-turbo-very-condensed",
  "prompt": "receive the url of a website and return the h1 tag of the page if it exists, using a headless browser",
  "score": 1,
  "remarks": "Invalid metadata row Node Metadata:"
}